with Sudoku_Data_Structure;		use Sudoku_Data_Structure;

procedure TentaB is
  
  -----------------------------------------------------------------------------
  -- Put: Skriver ut Sudoku-"brÃ¤det"
  -----------------------------------------------------------------------------
  procedure Put(Board : in Sudoku_Type) is
    
    ------------------------------------------------------------
    procedure Draw_Line(Ch1, Ch2 : in Character) is
      
    begin
      Put(Ch1);
      for I in 1 .. 3 loop
	for I in 1 .. 3 loop
	  Put(Ch2);
	end loop;
	Put(Ch1);
      end loop;
      New_Line;
    end Draw_Line;
    
    ------------------------------------------------------------
    
  begin
    Draw_Line('+', '-');
    for Y in Index_Type loop
      Put('|');
      for X in Index_Type loop
	Put(Get_Value(Board, X, Y));
	if X mod 3 = 0 then
	  Put('|');
	end if;
      end loop;
      New_Line;
      
      if Y mod 3 = 0 then
	Draw_Line('+', '-');
      end if;
    end loop;
  end Put;
  
  -----------------------------------------------------------------------------
  -- Character_To_Integer: A => 1, B => 2, ..., I => 9
  -----------------------------------------------------------------------------
  function Character_To_Integer(Ch : in Character) return Integer is
    
  begin
    return Character'Pos(Ch) - Character'Pos('A') + 1;
  end Character_To_Integer;

  -----------------------------------------------------------------------------
  
begin
  Put("Mata in startposition (ex: B1): ");

  I := Character_To_Integer(Ch);

  Put_Line("Det gick inte att hitta en lÃ¶sning!");
  
  
end  TentaB;
